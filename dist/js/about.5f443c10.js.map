{"version":3,"sources":["webpack://vue3/./src/views/Login.vue","webpack://vue3/./src/views/Login.vue?c536","webpack://vue3/./node_modules/core-js/internals/string-trim-forced.js","webpack://vue3/./node_modules/core-js/internals/string-trim.js","webpack://vue3/./node_modules/core-js/internals/whitespaces.js","webpack://vue3/./node_modules/core-js/modules/es.string.trim.js"],"names":["type","placeholder","username","handleEnterBtnClick","name","setup","router","Username","value","trim","length","alert","localStorage","setItem","push","getItem","render","fails","whitespaces","non","module","exports","METHOD_NAME","requireObjectCoercible","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","start","end","$","$trim","forcedStringTrimMethod","target","proto","forced","this"],"mappings":"sNACE,QAGM,a,SAFJ,QAA0D,SAAnDA,KAAK,OAAOC,YAAY,Q,qDAAiB,EAAAC,SAAQ,K,iBAAR,EAAAA,aAChD,QAAmD,UAA1C,QAAK,8BAAE,EAAAC,qBAAA,EAAAA,oBAAA,sBAAqB,W,gCAQzC,GACEC,KAAK,QAELC,MAHa,WAIX,IAAMH,GAAW,QAAI,IACfI,GAAS,UAETH,EAAsB,WACtB,IAAMI,EAAWL,EAASM,MAAMC,OAC7BF,EAASG,OAAO,EACjBC,MAAM,aAGRC,aAAaC,QAAQ,WAAWN,GAChCD,EAAOQ,KAAK,OASlB,OANA,SAAU,WACLF,aAAaG,QAAQ,aACtBT,EAAOQ,KAAK,QAIT,CACLZ,WACAC,yBCjCN,SAAgBa,EAEhB,S,qBCLA,IAAIC,EAAQ,EAAQ,MAChBC,EAAc,EAAQ,MAEtBC,EAAM,MAIVC,EAAOC,QAAU,SAAUC,GACzB,OAAOL,GAAM,WACX,QAASC,EAAYI,MAAkBH,EAAIG,MAAkBH,GAAOD,EAAYI,GAAalB,OAASkB,O,qBCT1G,IAAIC,EAAyB,EAAQ,MACjCL,EAAc,EAAQ,MAEtBM,EAAa,IAAMN,EAAc,IACjCO,EAAQC,OAAO,IAAMF,EAAaA,EAAa,KAC/CG,EAAQD,OAAOF,EAAaA,EAAa,MAGzCI,EAAe,SAAUC,GAC3B,OAAO,SAAUC,GACf,IAAIC,EAASC,OAAOT,EAAuBO,IAG3C,OAFW,EAAPD,IAAUE,EAASA,EAAOE,QAAQR,EAAO,KAClC,EAAPI,IAAUE,EAASA,EAAOE,QAAQN,EAAO,KACtCI,IAIXX,EAAOC,QAAU,CAGfa,MAAON,EAAa,GAGpBO,IAAKP,EAAa,GAGlBnB,KAAMmB,EAAa,K,iBCzBrBR,EAAOC,QAAU,iD,kCCAjB,IAAIe,EAAI,EAAQ,MACZC,EAAQ,aACRC,EAAyB,EAAQ,MAIrCF,EAAE,CAAEG,OAAQ,SAAUC,OAAO,EAAMC,OAAQH,EAAuB,SAAW,CAC3E7B,KAAM,WACJ,OAAO4B,EAAMK","file":"js/about.5f443c10.js","sourcesContent":["<template>\n  <div>\n    <input type=\"text\" placeholder=\"请输入昵称\" v-model=\"username\">\n    <button @click=\"handleEnterBtnClick\">进入聊天室</button>\n  </div>\n</template>\n\n<script>\n\nimport {ref,onMounted} from 'vue'\nimport {useRouter} from 'vue-router'\nexport default {\n  name:'Login',\n  \n  setup(){\n    const username = ref('');\n    const router = useRouter();\n\n    const handleEnterBtnClick = ()=>{\n          const Username = username.value.trim()\n          if(Username.length<6){\n            alert('昵称必须大于三位')\n            return\n          } \n          localStorage.setItem('username',Username)\n          router.push('/');\n\n    }\n    onMounted(()=>{\n      if(localStorage.getItem('username')){\n        router.push('/')\n      }\n    })\n\n    return {\n      username,\n      handleEnterBtnClick\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import { render } from \"./Login.vue?vue&type=template&id=360520f2\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n"],"sourceRoot":""}